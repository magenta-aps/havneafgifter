# Generated by Django 5.0.4 on 2024-04-26 14:22

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import havneafgifter.models
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='HarborDuesForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, verbose_name='Indberetningsdato')),
                ('nationality', models.CharField(choices=[('DK', 'Danmark')], max_length=2, verbose_name='Skibets nationalitet')),
                ('vessel_name', models.CharField(max_length=255, verbose_name='Skibets navn')),
                ('vessel_imo', models.CharField(blank=True, max_length=7, null=True, validators=[django.core.validators.MinLengthValidator(7), django.core.validators.MaxLengthValidator(7), django.core.validators.RegexValidator('\\d{7}'), havneafgifter.models.imo_validator], verbose_name='IMO-nummer')),
                ('vessel_owner', models.CharField(max_length=255, verbose_name='Skibets ejer')),
                ('vessel_master', models.CharField(max_length=255, verbose_name='Skibets kaptajn')),
                ('datetime_of_arrival', models.DateTimeField(verbose_name='Arrival date/time')),
                ('datetime_of_departure', models.DateTimeField(verbose_name='Departure date/time')),
                ('gross_tonnage', models.PositiveIntegerField(verbose_name='Bruttotonnage')),
                ('vessel_type', models.CharField(choices=[('FREIGHTER', 'Fragtskib'), ('FISHER', 'Fiskerbåd'), ('PASSENGER', 'Passagerskib'), ('CRUISE', 'Krydstogtskib'), ('OTHER', 'Other vessel')], max_length=9, verbose_name='Skibets type')),
                ('harbour_tax', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Beregnet havneafgift')),
            ],
        ),
        migrations.CreateModel(
            name='DisembarkmentSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Landingssted')),
                ('municipality', models.PositiveSmallIntegerField(choices=[(955, 'Kujalleq'), (958, 'Qaasuitsup'), (957, 'Qeqqata'), (956, 'Sermersooq'), (959, 'Qeqertalik'), (960, 'Avannaata'), (961, 'Nordøstgrønlands nationalpark')], verbose_name='Kommune')),
            ],
            options={
                'ordering': ['municipality', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Port',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, verbose_name='Port name')),
            ],
            options={
                'ordering': ['portauthority__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PortAuthority',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Port authority company name')),
                ('email', models.EmailField(max_length=254, verbose_name='Port authority contact email')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ShippingAgent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Navn')),
                ('email', models.EmailField(max_length=254, verbose_name='Email-adresse')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TaxRates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pax_tax_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Tax per passenger')),
                ('start_datetime', models.DateTimeField(blank=True, null=True)),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'TaxRates objects',
                'ordering': [models.OrderBy(models.F('start_datetime'), nulls_first=True)],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cpr', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(10), django.core.validators.RegexValidator('\\d{10}')])),
                ('cvr', models.CharField(blank=True, max_length=8, null=True, validators=[django.core.validators.MinLengthValidator(8), django.core.validators.MaxLengthValidator(8), django.core.validators.RegexValidator('\\d{8}')])),
                ('organization', models.CharField(blank=True, max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CruiseTaxForm',
            fields=[
                ('harborduesform_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='havneafgifter.harborduesform')),
                ('number_of_passengers', models.PositiveIntegerField(default=0, verbose_name='Antal passagerer')),
                ('pax_tax', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Beregnet passagerafgift')),
                ('disembarkment_tax', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Calculated disembarkment tax')),
            ],
            bases=('havneafgifter.harborduesform',),
        ),
        migrations.AddField(
            model_name='harborduesform',
            name='port_of_call',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='havneafgifter.port', verbose_name='Ankomsthavn'),
        ),
        migrations.AddField(
            model_name='port',
            name='portauthority',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='havneafgifter.portauthority'),
        ),
        migrations.AddField(
            model_name='harborduesform',
            name='shipping_agent',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='havneafgifter.shippingagent', verbose_name='Shippingagent'),
        ),
        migrations.CreateModel(
            name='PortTaxRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vessel_type', models.CharField(blank=True, choices=[('FREIGHTER', 'Fragtskib'), ('FISHER', 'Fiskerbåd'), ('PASSENGER', 'Passagerskib'), ('CRUISE', 'Krydstogtskib'), ('OTHER', 'Other vessel')], max_length=9, null=True, verbose_name='Skibets type')),
                ('gt_start', models.PositiveIntegerField(verbose_name='Vessel gross tonnage (lower)')),
                ('gt_end', models.PositiveIntegerField(blank=True, null=True, verbose_name='Vessel gross tonnage (upper)')),
                ('port_tax_rate', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, verbose_name='Tax per gross ton')),
                ('port', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='havneafgifter.port', verbose_name='Harbour')),
                ('tax_rates', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='port_tax_rates', to='havneafgifter.taxrates')),
            ],
        ),
        migrations.CreateModel(
            name='PassengersByCountry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nationality', models.CharField(choices=[('AU', 'Australien'), ('AT', 'Østrig'), ('BE', 'Belgien'), ('CA', 'Canada'), ('CN', 'Kina'), ('CZ', 'Tjekkiet'), ('DK', 'Danmark'), ('FI', 'Finland'), ('FR', 'Frankrig'), ('DE', 'Tyskland'), ('UK', 'Storbritannien'), ('GL', 'Grønland'), ('HK', 'Hong Kong'), ('IS', 'Island'), ('ID', 'Indonesien'), ('IT', 'Italien'), ('JP', 'Japan'), ('LU', 'Luxembourg'), ('MY', 'Malaysien'), ('NL', 'Nederlandene'), ('NZ', 'New Zealand'), ('NO', 'Norge'), ('PL', 'Polen'), ('RU', 'Rusland'), ('SG', 'Singapore'), ('KO', 'Sydkorea'), ('ES', 'Spanien'), ('SE', 'Sverige'), ('CH', 'Schweiz'), ('TW', 'Taiwan'), ('US', 'USA'), ('AS', 'Andet asiatisk land'), ('EU', 'Andet europæisk land'), ('OT', 'Andet land')], max_length=2, verbose_name='Nationalitet')),
                ('number_of_passengers', models.PositiveIntegerField(verbose_name='Antal passagerer fra nationaliteten')),
                ('cruise_tax_form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='passengers_by_country', to='havneafgifter.cruisetaxform')),
            ],
        ),
        migrations.CreateModel(
            name='Disembarkment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_passengers', models.PositiveIntegerField(verbose_name='Antal passagerer afskibet')),
                ('disembarkment_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='havneafgifter.disembarkmentsite')),
                ('cruise_tax_form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='havneafgifter.cruisetaxform')),
            ],
        ),
        migrations.CreateModel(
            name='DisembarkmentTaxRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('municipality', models.PositiveSmallIntegerField(choices=[(955, 'Kujalleq'), (958, 'Qaasuitsup'), (957, 'Qeqqata'), (956, 'Sermersooq'), (959, 'Qeqertalik'), (960, 'Avannaata'), (961, 'Nordøstgrønlands nationalpark')], verbose_name='Kommune')),
                ('disembarkment_tax_rate', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Disembarkment tax rate')),
                ('disembarkment_site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disembarkment_tax_rates', to='havneafgifter.disembarkmentsite', verbose_name='Landingssted')),
                ('tax_rates', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disembarkment_tax_rates', to='havneafgifter.taxrates')),
            ],
            options={
                'unique_together': {('tax_rates', 'municipality', 'disembarkment_site')},
            },
        ),
    ]
